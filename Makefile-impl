#
# @file Makefile-impl
# Auxiliary makefile for SCL project
# @author Boris Shurygin
#
# This makefile is to be called by main Makefile 
#

#Includes
RELEASE_INCLUDE_FLAGS = 
DEBUG_INCLUDE_FLAGS = 

# Final debug and release flags
DEBUG_OPT_FLAGS = -g -D_DEBUG
RELEASE_OPT_FLAGS = -O3

DEBUG_CPPFLAGS = $(DEBUG_OPT_FLAGS) $(DEBUG_INCLUDE_FLAGS)
RELEASE_CPPFLAGS = $(RELEASE_OPT_FLAGS) $(RELEASE_INCLUDE_FLAGS)

# Library sets for debug and release
DEBUG_LIB_NAMES = 
RELEASE_LIB_NAMES =

DEBUG_LIBS = $(addprefix -l, $(DEBUG_LIB_NAMES))
DEBUG_LIB_FLAGS =
RELEASE_LIBS = $(addprefix -l, $(RELEASE_LIB_NAMES))
RELEASE_LIB_FLAGS =

# Obtain string with all the *.cpp/*.c files in project
SOURCES_CPP:= $(wildcard $(SOURCES)/*/*.cpp $(SOURCES)/*/*.c\
	                 $(SOURCES)/Core/*/*.cpp $(SOURCES)/Core/*/*.c)

# Obtain string with all the *.h in project
HEADERS:= $(wildcard $(SOURCES)/*/*.h $(SOURCES)/Core/*/*.h)

DEBUG_SRC_NAMES= $(patsubst $(SOURCES)/%,$(DEBUG_OBJECTS_DIR)/%,$(SOURCES_CPP))
DEBUG_OBJS = $(DEBUG_SRC_NAMES:.cpp=.o)
DEBUG_DEPS = $(DEBUG_SRC_NAMES:.cpp=.d)

#
# This is how to exclude some projects' if necessary
#DEBUG_OBJS_UTEST = $(filter-out $(DEBUG_OBJECTS_DIR)/UnitTest/%,$(DEBUG_OBJS))

RELEASE_SRC_NAMES= $(patsubst $(SOURCES)/%,$(RELEASE_OBJECTS_DIR)/%,$(SOURCES_CPP))
RELEASE_OBJS = $(RELEASE_SRC_NAMES:.cpp=.o)
RELEASE_DEPS = $(RELEASE_SRC_NAMES:.cpp=.d)

utestd_impl: $(DEBUG_OBJS)
	@echo [linking] utestd
	@$(MKDIR) -p $(BIN_DIR)
	$(CXX) $(DEBUG_LIB_FLAGS) -o $(BIN_DIR)/utestd $(DEBUG_OBJS) $(DEBUG_LIBS)

utest_impl: $(RELEASE_OBJS)
	@echo [linking] utest
	@$(MKDIR) -p $(BIN_DIR)
	$(CXX) $(RELEASE_LIB_FLAGS) -o $(BIN_DIR)/utest $(RELEASE_OBJS) $(RELEASE_LIBS)

#
# Rules that run CPP compiler
#
#Dependency generation
$(DEBUG_OBJECTS_DIR)/%.d: $(SOURCES)/%.cpp
	@echo [generating deps] $*.cpp
	@$(MKDIR) -p $(dir $@)
	@$(CXX) -MM $(DEBUG_CPPFLAGS) $< -MF $@ -MT "$@ $(@:.d=.o)"

include $(DEBUG_DEPS)

#Objects generation
$(DEBUG_OBJECTS_DIR)/%.o: $(SOURCES)/%.cpp
	@echo [compiling] $*.cpp
	@$(MKDIR) -p $(dir $@)
	@$(CXX) -c $(DEBUG_CPPFLAGS) $< -o $@


#Dependency generation
$(RELEASE_OBJECTS_DIR)/%.d: $(SOURCES)/%.cpp
	@echo [generating deps] $*.cpp
	@$(MKDIR) -p $(dir $@)
	@$(CXX) -MM $(RELEASE_CPPFLAGS) $< -MF $@ -MT "$@ $(@:.d=.o)"

include $(RELEASE_DEPS)

#Objects generation
$(RELEASE_OBJECTS_DIR)/%.o: $(SOURCES)/%.cpp
	@echo [compiling] $*.cpp
	@$(MKDIR) -p $(dir $@)
	@$(CXX) -c $(RELEASE_CPPFLAGS) $< -o $@






